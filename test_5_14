//#include<stdio.h>
//#define N 100
//int n=3;
//int x[]={0,0,0};
//
//int c1=50;
//int w[]={10,40,40};
//int x1[]={0,0,0};
//int Constrain(int t)
//{ 
//	int i;  
//	int sum=0; 
//	static int sum1=0; 
//	for(i=0;i<=t;i++)
//	{ 
//		if(x[i]==1)  
//			sum+=w[i]; 
//	}  
//	printf("----------->%d\n",sum); 
//	for(i=0;i<n;i++)
//	{  
//		printf("%d",x1[i]);  
//	} 
//	printf("\n"); 
//	if(sum>c1)
//	{
//		x[t]=0; 
//		return 0; 
//	}    else 
//	{
//		if(sum1<sum)
//		{  
//			for(i=0;i<=t;i++)
//			{ 
//				if(x[i]==1) 
//					x1[i]=1;  
//				else
//					x1[i]=0;   
//			}  
//		}   return 1; 
//	} 
//} 
// int  Bound(int t)
//	{ 
//	 if(t<n)  
//		 return 1;
//	 else 
//		 return 0;
//	 
// }
// void Backtrack(int t)
// {
//	 int i;
//	 if(t<n)
//	 { 
//		 for(i=0;i<=1;i++)
//		 {
//			 x[t]=i;  
//			 if(Constrain(t)&&Bound(t))
//				  Backtrack(t+1); 
//		 }
//	 }
// }
// int main()
// { 
//	 int i;
//      int sum=0;
//      Backtrack(0);
//	  for(i=0;i<n;i++)
//	  {
//		  if(x1[i]==0)
//			  sum+=w[i]; 
//	  }
//	  if(sum>c1)
//	  {
//		  printf("无解");
//		  return 0;
//	  } 
//	  for(i=0;i<n;i++)
//	  {
//		 if(x1[i]==1)
//			 printf("%d  ",w[i]);  
//	  } 
// }


//
//#include <stdio.h>
//#include <stdlib.h>
//#include <math.h>
//
//int main()
//{
//	int n, i, j, k = 0, x = 1, y, z, m, p, q, a, s = 0;
//	scanf("%d", &n);
//	m = n;
//	for (i = 1; i < 12; i++)
//	{
//		m = m / 10;
//		k++;
//		if (m == 0)
//			break;
//	}
//	q = n;
//	k = k - 1;
//	for (a = 1; a <= k; a++)
//	{
//		x = x * 10;
//	}
//	y = q % x;
//	z = q / x;
//	p = q - y;
//	if (z >= 2)
//		s = s + x + z * k * (x / 10);
//	else
//		s = s + z * k * (x / 10);
//	for (j = p; j <= n; j++)
//	{
//		m = j;
//		for (i = 1; i < 12; i++)
//		{
//			x = m % 10;
//			if (x == 1)
//				s++;
//			m = m / 10;
//			if (m == 0)
//				break;
//		}
//	}
//	printf("%d", s);
//	return 0;
//}


#include <stdio.h>

int doubi(int n, int m)
{
	n = n + m;
	n = n % 100;
	return n;
}
int main()
{
	int t, i, a[100], n, m;
	scanf("%d", &t);
	for (i = 0; i <= (t - 1); i++) {
		scanf("%d%d", &n, &m);
		a[i] = doubi(n, m);
	}
	for (i = 0; i <= (t - 1); i++)
		printf("%d\n", a[i]);
	return 0;
}
